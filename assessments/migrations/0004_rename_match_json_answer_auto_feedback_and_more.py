# Generated by Django 5.2.6 on 2025-09-18 18:50

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('assessments', '0003_remove_test_course_test_course_section'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameField(
            model_name='answer',
            old_name='match_json',
            new_name='auto_feedback',
        ),
        migrations.RenameField(
            model_name='answer',
            old_name='selected_json',
            new_name='teacher_feedback',
        ),
        migrations.RemoveField(
            model_name='question',
            name='correct_json',
        ),
        migrations.RemoveField(
            model_name='question',
            name='options_json',
        ),
        migrations.AddField(
            model_name='answer',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='answer',
            name='is_correct',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='answer',
            name='matching_answers_json',
            field=models.JSONField(blank=True, help_text='JSON array of matching answers', null=True),
        ),
        migrations.AddField(
            model_name='answer',
            name='max_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='answer',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='attempt',
            name='attempt_number',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='attempt',
            name='is_completed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='attempt',
            name='is_graded',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='attempt',
            name='percentage',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='attempt',
            name='results_viewed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='correct_answer_text',
            field=models.TextField(blank=True, help_text='Expected answer for open questions', null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2022, 1, 1, 0, 0)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='question',
            name='matching_pairs_json',
            field=models.JSONField(blank=True, help_text='JSON array of matching pairs', null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='sample_answer',
            field=models.TextField(blank=True, help_text='Sample answer for reference', null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='test',
            name='allow_multiple_attempts',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='test',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2022, 1, 1, 0, 0)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='test',
            name='max_attempts',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum number of attempts (if multiple attempts allowed)', null=True),
        ),
        migrations.AddField(
            model_name='test',
            name='show_correct_answers',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='test',
            name='show_feedback',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='test',
            name='show_score_immediately',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='test',
            name='time_limit_minutes',
            field=models.PositiveIntegerField(blank=True, help_text='Time limit in minutes (optional)', null=True),
        ),
        migrations.AddField(
            model_name='test',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='answer',
            name='score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='attempt',
            name='started_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2022, 1, 1, 0, 0)),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='question',
            name='points',
            field=models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='question',
            name='type',
            field=models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('choose_all', 'Choose All That Apply'), ('open_question', 'Open Question'), ('matching', 'Matching Items')], max_length=32),
        ),
        migrations.AlterUniqueTogether(
            name='attempt',
            unique_together={('test', 'student', 'attempt_number')},
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('position', models.PositiveIntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='assessments.question')),
            ],
            options={
                'ordering': ['position', 'id'],
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='selected_options',
            field=models.ManyToManyField(blank=True, related_name='selected_in_answers', to='assessments.option'),
        ),
    ]
